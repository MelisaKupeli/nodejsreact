import React, { use } from "react"
import { useState, useEffect} from "react";
export
const Text =() => {
const [text, setText] = useState("");
// ğŸ”¹ showInput â†’ input alanÄ±nÄ±n gÃ¶sterilip gÃ¶sterilmediÄŸini kontrol eden state
const [showInput, setShowInput] = useState(false); 

useEffect(() => {
    console.log("Text component mounted");
// Bu genelde temizlik (cleanup) iÅŸlemleri iÃ§indir.
    return () =>{
    console.log("Text component unmounted");
    };
}, []); // ğŸ”¸ BoÅŸ dependency array ([]) â†’ sadece ilk yÃ¼klemede (mount) ve kapanÄ±ÅŸta (unmount) Ã§alÄ±ÅŸÄ±r.

return (
    <div>
        <button onClick={()=> setShowInput(!showInput)}>Show Text</button>
        <br/>
        <br/>
        {showInput && (
            <>
        <input
            onChange={(event) => 
                {setText(event.target.value);
            }}
            placeholder="Type something"
            
        />
        <h1>{text}</h1>
        <button onClick={() => setText("")}>Clear</button>
   </>
        )}
    </div>
);
}

//useEffect == Reactâ€™te fonksiyonel bileÅŸenlerde yan etkileri (side effects) yÃ¶netmek iÃ§in kullanÄ±lÄ±r.
// side effect == UI dÄ±ÅŸÄ±nda gerÃ§ekleÅŸen iÅŸlemler.
// Ã–rnekler: API Ã§aÄŸrÄ±sÄ±, timer, localStorageâ€™a veri kaydetme, 
// DOM manipÃ¼lasyonu, event listener ekleme/temizleme.