// ğŸ”¹ React'te bir bileÅŸen (component) tanÄ±mlÄ±yoruz.
// Bu component'in adÄ± "Users" ve iÃ§inde baÅŸka alt component'ler (User, User2) tanÄ±mlayacaÄŸÄ±z.
export const Users = () => {

  // ğŸ”¹ Bu bir dizi â€” sadece 3 kere User2 component'ini ekrana bastÄ±rmak iÃ§in kullanacaÄŸÄ±z.
  const times = [1, 2, 3];

  // ğŸ”¹ Bu component props alÄ±yor.
  // props = dÄ±ÅŸarÄ±dan gelen veriler (name, age, email gibi)
  const User = (props) => {
    // ğŸ”¹ props iÃ§inden name, age ve email alanlarÄ±nÄ± ayÄ±rÄ±yoruz (destructuring)
    const { name, age, email } = props;

    // ğŸ”¹ EÄŸer yaÅŸ 18 veya Ã¼stÃ¼yse yetiÅŸkin kabul ediyoruz
    const isAdult = age >= 18;

    // ğŸ”¹ Component JSX dÃ¶ndÃ¼rÃ¼yor (gÃ¶rÃ¼nÃ¼m kÄ±smÄ±)
    return (
      <div className="user">
        <h1>Hello {name}</h1>
        <h2>{age} years old</h2>
        <h3>{email}</h3>

        {/* ğŸ”¹ Ternary operator (koÅŸullu gÃ¶sterim) */}
        <p>{isAdult ? "Is adult" : "Is not adult"}</p>
      </div>
    );
  };

  // ğŸ”¹ Bu component props almÄ±yor, veriler kendi iÃ§inde sabit tanÄ±mlanmÄ±ÅŸ.
  const User2 = () => {
    const name = "Melisa", age = 18, email = "xxd@gmail.com";

    return (
      <div className="user2">
        <h1>Hello {name}</h1>
        <h2>{age} years old</h2>
        <h3>{email}</h3>
      </div>
    );
  };

  // ğŸ”¹ Ekranda hangi component'leri gÃ¶stereceÄŸimizi belirliyoruz
  return (
    <div>
      {/* ğŸ”¹ 3 kere User2 component'ini ekrana yazdÄ±rÄ±r */}
      {times.map((_, index) => (
        <div key={index}>
          <User2 />
        </div>
      ))}

      {/* ğŸ”¹ Burada props gÃ¶nderiyoruz */}
      <div>
        <User name="Mell" age={15} email="xxdx@gmail.com" />
        <User name="Melisa" age={18} email="xxd@gmail.com" />
      </div>
    </div>
  );
};



// ğŸ§© Ã–ZET NOTLAR:
// âœ… "Users" bir ana componentâ€™tir (parent component)
// âœ… "User" ve "User2" bu componentâ€™in iÃ§indeki alt bileÅŸenlerdir (child components)
// âœ… "User" props alÄ±r â†’ dÄ±ÅŸarÄ±dan name, age, email gibi verileri parametre olarak alÄ±r.
// âœ… "User2" props almaz â†’ verileri kendi iÃ§inde sabit yazar.
// âœ… times.map â†’ 3 kere User2 bileÅŸenini ekrana bastÄ±rÄ±r.
// âœ… props = componentâ€™ler arasÄ± veri paylaÅŸÄ±mÄ± saÄŸlar.
// âœ… Component = fonksiyon gibi davranÄ±r, JSX dÃ¶ndÃ¼rÃ¼r (ekran gÃ¶rÃ¼nÃ¼mÃ¼).
